#BlueJ class context
comment0.target=SummerOO
comment0.text=\r\n\ This\ Object-Oriented\ version\ of\ the\ "Summer"\ class\r\n\ is\ a\ simple\ introduction\ to\ constructors\ /\ \r\n\ private\ data\ members\ /\ static\ vs.\ not\ static\ /\ and\ the\r\n\ "toString"\ method.\ \r\n\r\n\ SKELETON\ FOR\ LAB\ TEST.\r\n\ \r\n\ @author\ Raymond\ Lister\r\n\ @version\ April\ 2015;\r\n
comment1.params=
comment1.target=SummerOO()
comment1.text=\r\n\ This\ is\ a\ ?dangerous?\ constructor,\ since\ the\ average\ is\r\n\ undefined\ when\ the\ object\ is\ created.\r\n\ \r\n\ This\ constructor\ and\ the\ method\ reset()\r\n\ are\ similar.\ The\ differences\ are\ that\:\r\n\ (1)\ The\ constructor\ can\ only\ be\ used\ once,\ when\ the\r\n\ \ \ \ \ object\ is\ created.\r\n\ (2)\ The\ method\ reset()\ can't\ create\ an\ object,\ but\ it\ can\r\n\ \ \ \ \ be\ used\ whenever\ we\ like,\ as\ many\ times\ as\ we\ like,\r\n\ \ \ \ \ after\ the\ object\ has\ been\ created.\r\n
comment2.params=num
comment2.target=SummerOO(int)
comment2.text=\r\n\ This\ is\ a\ safer\ constructor,\ since\ the\ average\ is\r\n\ well\ defined\ when\ the\ object\ is\ created.\r\n\ \r\n\ This\ constructor\ and\ the\ method\ reset(int\ firstNumber)\r\n\ are\ similar.\ The\ differences\ are\ that\:\r\n\ (1)\ The\ constructor\ can\ only\ be\ used\ once,\ when\ the\r\n\ \ \ \ \ object\ is\ created.\r\n\ (2)\ The\ method\ reset()\ can't\ create\ an\ object,\ but\ can\r\n\ \ \ \ \ be\ used\ whenever\ we\ like,\ as\ many\ times\ as\ we\ like,\r\n\ \ \ \ \ after\ the\ object\ has\ been\ created.\r\n\ \r\n\ @param\ \ \ firstNumber\ The\ first\ number\ of\ a\ series\ \r\n
comment3.params=newNumber
comment3.target=void\ putNumber(int)
comment3.text=\r\n\ Receives\ and\ processes\ a\ new\ number\ in\ the\ series.\r\n\ \r\n\ NOTE\ TO\ STUDENTS\:\ When\ studying\ this\ code,\ experiment\ in\r\n\ BlueJ,\ by\ adding\ "static"\ into\ "public\ void\ putNumber".\r\n\ When\ you\ compile,\ you'll\ get\ an\ error\ message\ ...\r\n\ \r\n\ "non-static\ variable\ sum\ cannot\ be\ referenced\ from\ a\r\n\ static\ context".\r\n\ \r\n\ In\ other\ words\ a\ "static"\ method\ (which\ belongs\ to\ the\r\n\ class,\ not\ an\ individuaual\ object),\ can't\ access\ the\r\n\ variables\ in\ an\ object.\ This\ is\ for\ two\ reasons\:\r\n\ (1)\ If\ we\ haven't\ created\ ANY\ objects\ yet,\ then\ there\ is\r\n\ \ \ \ \ no\ variable\ "sum"\ to\ access\!\r\n\ (2)\ If\ multiple\ objects\ ("instances")\ of\ this\r\n\ \ \ \ \ class\ exist,\ then\ there\ are\ multiple\ versions\ of\r\n\ \ \ \ \ the\ "sum"\ variable,\ one\ version\ of\ "sum"\ in\ each\r\n\ \ \ \ \ object.\ The\ static\ method\ (which\ belongs\ to\ the\r\n\ \ \ \ \ class)\ cannot\ choose\ from\ the\ many\ versions\ of\ "sum".\r\n\ \ The\ same\ applies\ to\ the\ variable\ "count".\ The\ error\r\n\ \ message\ singled\ out\ "sum"\ because\ it\ occured\ before\r\n\ \ "count".\r\n\ \r\n\ @param\ \ newNumber\ \ \ a\ new\ number\ in\ the\ series\ \r\n
comment4.params=
comment4.target=int\ getNumSummers()
comment4.text=\r\n\ Note\ that\ this\ is\ a\ static\ method.\ \r\n\ \r\n\ @return\ \ The\ number\ of\ objects\ that\ have\ been\ created.\ \r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ It\ is\ common\ practise\ to\ supply\ a\ "toString"\ method\ \r\n\ in\ an\ object-oriented\ class.\ \ In\ fact,\ if\ you\ don't\ \r\n\ explicitly\ supply\ such\ a\ method,\ Java\ produces\ an\ \r\n\ implicit,\ simplistic\ "toString"\ method\ which\ produces\r\n\ a\ String\ like\ "SummerOO@1edd1f0".\ The\ word\ before\ \r\n\ the\ "@"\ is\ the\ name\ of\ the\ class.\ The\ hexadecimal\ \r\n\ number\ after\ the\ "@"\ is\ called\ the\ objects\ "hash\ code".\ \r\n\ \ \r\n\ Note\:\ Method\ "toString"\ method\ is\ NOT\ "static".\ It\ \r\n\ can't\ be\ static,\ since\ the\ values\ in\ the\ data\ members\ \r\n\ may\ vary\ between\ objects\ of\ this\ class.\r\n\ \r\n\ See\ Nielsen,\ page\ \ 78,\r\n\ \ \ \ \ \ \ \ \ \ section\ "5.2.4\ The\ toString\ Method"\r\n\ See\ Nielsen,\ page\ 165,\r\n\ \ \ \ \ \ \ \ \ \ section\ "8.2.1\ Overriding\ the\ toString\ Method"\r\n\ \r\n@return\ \ \ The\ state\ of\ this\ "class\ instance"\ /\ "object"\ \ \r\n
comment6.params=args
comment6.target=void\ main(java.lang.String[])
comment6.text=\r\n\ The\ purpose\ of\ this\ main\ method\ is\ to\ reinforce\ the\r\n\ lesson\ that\ anything\ that\ can\ be\ done\ through\ a\ BlueJ\r\n\ menu\ can\ also\ been\ done\ in\ some\ Java\ code.\r\n\ \r\n\ @param\ \ \ args\ Isn't\ used.\ Its\ here\ because\ PLATE\ always\ expects\ to\ see\ "main"\ methods\ which\ accepts\ as\ a\ parameter\ an\ array\ of\ Strings.\r\n
numComments=7
